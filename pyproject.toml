[tool.poetry]
name = "omnidep"
version = "0.3.5"
description = "Linter to compare project dependencies against imports in source code"
readme = "README.rst"
authors = ["Steve Jessop <68118527+sjjessop@users.noreply.github.com>"]
license = "MIT"
homepage = "https://github.com/sjjessop/omnidep"
packages = [{ include = "omnidep" }]

[tool.poetry.dependencies]
python = ">=3.7.0"

importlib-metadata = {version = ">=1.1.0", python = "<3.8" }
isort = { version = ">=5.0.1", python = "<3.10" }  # 5.0.1 fixes some issue importing vendored toml
tomli = { version = ">=1.1.0", python = "<3.11" }  # 1.1.0 adds support for binary filehandles

[tool.poetry.group.dev.dependencies]
coverage = { version = "*", extras = ["toml"] }
isort = "<5.12"
mypy = "*"
pytest = "*"
pytest-cov = "*"
ruff = "0.0.267"

[tool.poetry.group.test_case.dependencies]
# Projects used as dependencies in test cases, that need to be installed so
# omnidep can detect them.
opentelemetry-api = "*"
opentelemetry-sdk = "*"
pyOpenSSL = "*"

[tool.poetry.scripts]
omnidep = 'omnidep.main:script_entry_point'

[tool.poetry.urls]
"Changelog" = "https://github.com/sjjessop/omnidep/tree/develop#changelog"


[tool.omnidep]
local-test-paths = ["omnidep/tst/"]
ignore-imports = [
    # Used in test cases as a missing package/module
    "no_such_module",
    # Used in test cases as a namespace package
    "opentelemetry",
    # Omnidep does not understand version-specific imports
    "tomllib",
]


[tool.isort]
force_sort_within_sections = true
lines_after_imports=1
multi_line_output = "VERTICAL_GRID_GROUPED"
include_trailing_comma = true
src_paths = ["omnidep"]
known_first_party = ["omnidep"]


[tool.mypy]
pretty = true
strict = true
warn_unreachable = true
disallow_untyped_calls = false


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]


[tool.pytest.ini_options]
filterwarnings = ["error"]


[tool.ruff]
show-source = true
show-fixes = true
select = [
    # Old-school flake8 rules
    "E", "F",
    # Helpers for tedious admin
    "EXE", "INP", "YTT",
    # Coding style warts
    "A001", "A002", "C4", "ISC", "PTH", "RET", "RSE",
    # Potential code improvements
    "B", "C90", "FBT", "PL", "PT", "RUF", "S", "UP"
]
ignore = [
    "B023",  # The problem is not the function definition, but escaped references.
    "C401",  # Writing set() to imply deduplication is clearer to me than just punctuation.
    "E501",  # I have a 4k display.
    "PLR0913",  # Restricts keyword-only arguments too much
    "PLR2004",  # Rejects too many innocuous numbers.
]
target-version = "py37"

[tool.ruff.per-file-ignores]
"omnidep/tst/*" = ["S101"]

[tool.ruff.flake8-pytest-style]
parametrize-names-type = "csv"

[tool.ruff.pyupgrade]
# While still supporting Python 3,7, avoids having different style requirements
# according to whether or not each file imports __future__ annotations.
keep-runtime-typing = true

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
